{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcesPrefix": {
            "type": "string",
            "defaultValue": "azmooclus",
            "metadata": {
                "description": "Prefix of storage account name, network, virtual machines, and so on"
            }
        }, 
        "vmSize" 
        : {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "VM size for the nodes"
            }
        },
        "GlusterVmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "VM size for the gluster nodes"
            }
        },
        "moodleVersion": {
            "type": "string",
            "defaultValue": "MOODLE_31_STABLE",
            "allowedValues": [
                "MOODLE_31_STABLE",
                "MOODLE_30_STABLE",
                "MOODLE_29_STABLE"
            ],
            "metadata": {
                "description": "The Moodle version you want to install."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "ssh user name"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "ssh password"
            }
        },
        "mySQLuserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "my sql regular user password"
            }
        },
        "mySQLrootPassword": {
            "type": "securestring",
            "metadata": {
                "description": "my sql root user password"
            }
        }
    },
    "variables": {
        "storageAcctName": "[concat(parameters('resourcesPrefix'),'sa')]",
        "jboxpipName" : "[concat('jb-',parameters('resourcesPrefix'))]",
        "vnetName": "[concat(parameters('resourcesPrefix'),'vnet')]",
        "vmName": "[concat(parameters('resourcesPrefix'),'vm')]",
        "vnetPrefix": "172.18.0.0/16",
        "SubnetWeb": "webtier",
        "SubnetWebPrefix": "172.18.0.0/24",
        "SubnetWebRef": "[concat(variables('vnetID'), '/subnets/', variables('SubnetWeb'))]",
        "SubnetSan": "santier",
        "SubnetSanPrefix": "172.18.1.0/24",
        "GfsVmIPPrefix": "172.18.1.1",
        "volumeName": "data",
        "SubnetDb": "datatier",
        "SubnetDbPrefix": "172.18.2.0/24",
        "dbVmIPPrefix": "172.18.2.1",
        "nicName": "vmssnic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "webSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('SubnetWeb'))]",
        "sanSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('SubnetSan'))]",
        "dbSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('SubnetDb'))]",
        "osImagePublisher": "Canonical",
        "osImageOffer": "UbuntuServer",
        "osImageSKU": "14.04.4-LTS",
        "osImageVersion": "latest",
        "GlusterSetupCmd": "bash azuregfs.sh",
        "customScriptFilePath": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/gluster-file-system/azuregfs.sh",
        "scaleNumber": 2,
        "gfsScaleNumber": 2,
        "SharedStorageAccountName": "[concat(variables('storageAcctName'), uniqueString(resourceGroup().id))]",
        "JumpVmOSDiskName": "JumpVmOSDisk",
        "JumpVmVmSize": "Standard_A1",
        "JumpVmStorageAccountContainerName": "vhds",
        "diagnosticsStorageAccountName": "[variables('SharedStorageAccountName')]",
        "diagnosticsStorageAccountResourceGroup": "[resourceGroup().name]",
        "wadlogs": "<WadCfg><DiagnosticMonitorConfiguration>",
        "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
        "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "wadcfgxstart": "[concat(variables('wadlogs'),variables('wadperfcounters1'),variables('wadperfcounters2'),'<Metrics resourceId=\"')]",
        "wadmetricsresourceid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name ,'/providers/','Microsoft.Compute/virtualMachineScaleSets/','vmSS',variables('vmName'))]",
        "wadcfgxend": "[concat('\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
        "natPoolName": "natpool",
        "bePoolName": "bePool",
        "natStartPort": 50000,
        "natEndPort": 50119,
        "natBackendPort": 22,
        "ilbNicName": "ilbnic",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers','lbWeb')]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/ipcfg_lb')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/', variables('bePoolName'))]",        
        "storageApiVersion": "2015-06-15",
        "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',variables('diagnosticsStorageAccountResourceGroup'),'/providers/','Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]",
        "osType": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "14.04.4-LTS",
            "version": "latest"
        },
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses','webpip')]",
        "siteFQDN" : "", 
        "moodleScriptLocation": "https://raw.githubusercontent.com/picozzo92/azuremoodle/v1/scripts/",
        "install_moodleScriptFileName": "install_moodle.sh",
        "setup_moodleScriptFileName": "setup_moodle.sh",
        "mariadbScriptLocation": "https://raw.githubusercontent.com/picozzo92/azuremoodle/v1/scripts/",
        "install_mariadbScriptFileName": "install_mariadb.sh",
        "nodeDBCount" : 2,
        "subnetIPBase": "172.18.2.",
        "mariadbbe": "[concat(resourceId('Microsoft.Network/loadBalancers','mariadblb'),'/backendAddressPools/mariadb-be')]",
        "mariadbfipc": "[concat(resourceId('Microsoft.Network/loadBalancers','mariadblb'),'/frontendIPConfigurations/mariadb-fipc')]",
        "mariadbprobe": "[concat(resourceId('Microsoft.Network/loadBalancers','mariadblb'),'/probes/mariadb-probe')]"    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(variables('storageAcctName'), copyIndex())]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "GfsStorageAccount"
            },
            "copy": {
                "name": "gfs",
                "count": "[variables('GfsScaleNumber')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "vmss",
                "count": 5
            },
            "location": "[resourceGroup().location]",
            "name": "[concat('vmss',variables('storageAcctName'), copyIndex())]",
            "properties": {
                "accountType": "Standard_LRS"
            },
            "tags": {
                "displayName": "VmssStorageAccount"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat('db', variables('storageAcctName'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "copy": {
                "name": "db",
                "count": "[variables('scaleNumber')]"
            },
            "tags": {
                "displayName": "DatabaseStorageAccount"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[variables('SharedStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "SharedStorageAccount"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "name": "[variables('vnetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "LmsVirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('SubnetWeb')]",
                        "properties": {
                            "addressPrefix": "[variables('SubnetWebPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('SubnetSan')]",
                        "properties": {
                            "addressPrefix": "[variables('SubnetSanPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('SubnetDb')]",
                        "properties": {
                            "addressPrefix": "[variables('SubnetDbPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('jboxpipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "jboxpip"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('jBoxPipName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "jboxNsg",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_SSH",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow_http",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1005,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('gfsnic', copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "GfsNic"
            },
            "copy": {
                "name": "gfs",
                "count": "[variables('gfsScaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipcfg_gfs",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('GfsVmIPPrefix'), copyindex())]",
                            "subnet": {
                                "id": "[variables('sanSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('dbnic', copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "dbNic"
            },
            "copy": {
                "name": "db",
                "count": "[variables('scaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', 'mariadbLb')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipcfg_db",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('dbVmIPPrefix'), copyindex())]",
                            "subnet": {
                                "id": "[variables('dbSubnetRef')]"
                            },
                             "loadBalancerBackendAddressPools": [
                            {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers','mariadblb'), '/backendAddressPools/mariadb-be')]"
                            }
]                            
                        }
                    }
                ]
            }
        },
        {
            "name": "jboxnic",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('jboxpipName'))]"
            ],
            "tags": {
                "displayName": "jboxNic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipcfgjbox",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('SubnetWebRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jboxpipName'))]"
                            }
                        },
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'jboxNsg')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "webpip",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[tolower(concat('lb-',parameters('resourcesPrefix')))]"
                },
                "publicIPAllocationMethod": "Dynamic",
                "tags": {
                    "displayName": "webpip"
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('gfs',variables('vmName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "GfsVms"
            },
            "copy": {
                "name": "gfs",
                "count": "[variables('gfsScaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', 'gfsnic', copyindex())]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAcctName'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/','GfsAvSet')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('GlusterVmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat('gfs',variables('vmName'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets','GfsAvSet')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAcctName'), copyindex(), '.blob.core.windows.net/vhds/','gfs' ,variables('vmName'), copyIndex(), 'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk1",
                            "diskSizeGB": "400",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat('http://', variables('storageAcctName'), copyindex(),'.blob.core.windows.net/vhds/gfs', variables('vmName'), copyIndex(), 'datadisk1.vhd')]"
                            },
                            "createOption": "Empty"
                        },
                        {
                            "name": "datadisk2",
                            "diskSizeGB": "400",
                            "lun": 1,
                            "vhd": {
                                "uri": "[concat('http://', variables('storageAcctName'), copyindex(),'.blob.core.windows.net/vhds/gfs', variables('vmName'), copyIndex(), 'datadisk2.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('gfsNic', copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('db',variables('vmName'), copyindex())]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "dbVms"
            },
            "copy": {
                "name": "db",
                "count": "[variables('scaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', 'dbnic', copyindex())]",
                "[concat('Microsoft.Storage/storageAccounts/', 'db', variables('storageAcctName'), copyindex())]",
                "[concat('Microsoft.Compute/availabilitySets/', 'dbAvSet')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets','dbAvSet')]"
                },
                "osProfile": {
                    "computerName": "[concat('db',variables('vmName'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAcctName'), copyindex(), '.blob.core.windows.net/vhds/', 'db',variables('vmName'), copyIndex(), 'osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "datadisk1",
                            "diskSizeGB": "500",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat('http://', variables('storageAcctName'), copyindex(),'.blob.core.windows.net/vhds/', 'db', variables('vmName'), copyIndex(), 'datadisk1.vhd')]"
                            },
                            "createOption": "Empty"
                        },
                        {
                            "name": "datadisk2",
                            "diskSizeGB": "500",
                            "lun": 1,
                            "vhd": {
                                "uri": "[concat('http://', variables('storageAcctName'), copyindex(),'.blob.core.windows.net/vhds/', 'db', variables('vmName'), copyIndex(), 'datadisk2.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('dbNic', copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "install_mariadb",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-06-15",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/','db',variables('vmName'),copyIndex())]"
                    ],
                    "tags": {
                        "displayName": "install_mariadb"
                    },
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('mariadbScriptLocation'),variables('install_mariadbScriptFileName'))]"
                            ],
                            "commandToExecute": "[concat('bash ', variables('install_mariadbScriptFileName'),' ', variables('nodeDBCount'), ' ', parameters('mySQLrootPassword'),' ',variables('subnetIPBase'), ' ', parameters('mySQLuserPassword'))]"
                        }
                    }
                }
            ]            
        },
        {
            "name": "[concat('jbox',variables('vmName'))]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/gfs',variables('vmName'),'0')]",
                "[concat('Microsoft.Compute/virtualMachines/gfs',variables('vmName'),'0/extensions/setupGluster')]",                
                "[concat('Microsoft.Storage/storageAccounts/', variables('SharedStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', 'jboxnic')]"
            ],
            "tags": {
                "displayName": "JumpVm"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('JumpVmVmSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'jboxNic')]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat('jbox',variables('vmName'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "JumpVmOSDisk",
                        "vhd": {
                            "uri": "[concat('http://', variables('SharedStorageAccountName'), '.blob.core.windows.net/vhds/jbox', variables('vmName'), '-osdisk.vhd')]"
                        }
                    }
                }
            },
            "resources": [
                {
                    "name": "install_moodle",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-06-15",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat('jbox',variables('vmName')))]"
                    ],
                    "tags": {
                        "displayName": "install_moodle"
                    },
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('moodleScriptLocation'),variables('install_moodleScriptFileName'))]"
                            ],
                            "commandToExecute": "[concat('sh ', variables('install_moodleScriptFileName'),' ',parameters('moodleVersion'),' ','gfs',variables('vmName'),'0', ' ',variables('volumeName'),' ',parameters('mySQLuserPassword'),' ', reference(variables('publicIPAddressID'),providers('Microsoft.Network','publicIPAddresses').apiVersions[0]).dnsSettings.fqdn )]"
                        }
                    }
                }
            ]
        },
     {  
         "apiVersion":"2015-06-15",
         "name":"mariadblb",
         "type":"Microsoft.Network/loadBalancers",
         "location":"[resourceGroup().location]",
         "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
         ],
         "properties":{  
            "frontendIPConfigurations":[  
               {  
                  "name":"mariadb-fipc",
                  "properties":{  
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"172.18.2.5",
                     "subnet":{  
                        "id":"[variables('dbsubnetRef')]"
                     }
                  }
               }
            ],
            "backendAddressPools":[  
               {  
                  "name":"mariadb-be"
               }
            ],
            "loadBalancingRules":[  
               {  
                  "name":"MariaDbListener",
                  "properties":{  
                     "backendAddressPool":{  
                        "id":"[variables('mariadbbe')]"
                     },
                     "frontendIPConfiguration":{  
                        "id":"[variables('mariadbfipc')]"
                     },
                     "probe":{  
                        "id":"[variables('mariadbprobe')]"
                     },
                     "protocol":"tcp",
                     "frontendPort":3306,
                     "backendPort":3306,
                     "enableFloatingIP":false
                  }
               }
            ],
            "probes":[  
               {  
                  "name":"mariadb-probe",
                  "properties":{  
                     "protocol":"tcp",
                     "port":3306,
                     "intervalInSeconds":"5",
                     "numberOfProbes":"6"
                  }
               }
            ]
         }
      },        
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "name": "lbWeb",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/','webpip')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                {
                    "name": "ipcfg_lb",
                    "properties": {
                    "publicIPAddress": {
                        "id": "[variables('publicIPAddressID')]"
                    }
                    }
                }
                ],
                "backendAddressPools": [
                {
                    "name": "[variables('bePoolName')]"
                }
                ],
                "loadBalancingRules": [
                {
                    "name": "lbhttp",
                    "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": 80,
                    "backendPort": 80,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[variables('lbProbeID')]"
                    }
                    }
                },
                {
                    "name": "lbhttps",
                    "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "backendAddressPool": {
                        "id": "[variables('lbPoolID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": 443,
                    "backendPort": 443,
                    "enableFloatingIP": false,
                    "idleTimeoutInMinutes": 5,
                    "probe": {
                        "id": "[variables('lbProbeID')]"
                    }
                    }
                }
                ],
                "probes": [
                {
                    "name": "tcpProbe",
                    "properties": {
                    "protocol": "tcp",
                    "port": 80,
                    "intervalInSeconds": "5",
                    "numberOfProbes": "3"
                    }
                }
                ],
                "inboundNatPools": [
                {
                    "name": "[variables('natPoolName')]",
                    "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPortRangeStart": "[variables('natStartPort')]",
                    "frontendPortRangeEnd": "[variables('natEndPort')]",
                    "backendPort": "[variables('natBackendPort')]"
                    }
                }
                ]
            }            
        },        
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "webfarm",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-03-30",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', 'vmss',variables('storageAcctName'), '0')]",
                "[concat('Microsoft.Storage/storageAccounts/', 'vmss',variables('storageAcctName'), '1')]",
                "[concat('Microsoft.Storage/storageAccounts/', 'vmss',variables('storageAcctName'), '2')]",
                "[concat('Microsoft.Storage/storageAccounts/', 'vmss',variables('storageAcctName'), '3')]",
                "[concat('Microsoft.Storage/storageAccounts/', 'vmss',variables('storageAcctName'), '4')]",
                "[concat('Microsoft.Compute/virtualMachines/gfs',variables('vmName'),'0/extensions/setupGluster')]",                
                "[concat('Microsoft.Compute/virtualMachines/jbox',variables('vmName'),'/extensions/install_moodle')]",                
                "[concat('Microsoft.Network/loadBalancers/', 'lbWeb')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "tags": {
                "displayName": "webfarm"
            },
            "sku": {
                "capacity": 10,
                "name": "Standard_A1",
                "tier": "Standard"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "vhdContainers": [
                                "[concat('https://', 'vmss', variables('storageAcctName'), '0.blob.core.windows.net/vhds0')]",
                                "[concat('https://', 'vmss', variables('storageAcctName'), '1.blob.core.windows.net/vhds1')]",
                                "[concat('https://', 'vmss', variables('storageAcctName'), '2.blob.core.windows.net/vhds2')]",
                                "[concat('https://', 'vmss', variables('storageAcctName'), '3.blob.core.windows.net/vhds3')]",
                                "[concat('https://', 'vmss', variables('storageAcctName'), '4.blob.core.windows.net/vhds4')]"
                            ],
                            "name": "osdisk",
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        },
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[concat('web',variables('vmName'))]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "ipConfigurations": [
                                        {
                                            "name": "ipcfg_lb",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/', variables('subnetWeb'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/lbWeb/backendAddressPools/', variables('bePoolName'))]"
                                                    }
                                                ],
                                               "loadBalancerInboundNatPools": [
                                                  {
                                                      "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/lbWeb/inboundNatPools/', variables('natPoolName'))]"
                                                    }
                                               ]      
                                            }
                                        }
                                    ],
                                    "primary": "true"
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "LinuxDiagnostic",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "LinuxDiagnostic",
                                    "typeHandlerVersion": "2.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "xmlCfg": "[base64(concat(variables('wadcfgxstart'),variables('wadmetricsresourceid'),variables('wadcfgxend')))]",
                                        "storageAccount": "[variables('diagnosticsStorageAccountName')]"
                                    },
                                    "protectedSettings": {
                                        "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
                                        "storageAccountKey": "[listkeys(variables('accountid'), variables('storageApiVersion')).key1]",
                                        "storageAccountEndPoint": "https://core.windows.net"
                                    }
                                }
                            },
                            {
                                "name": "setup_moodle",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.4",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[concat(variables('moodleScriptLocation'),variables('setup_moodleScriptFileName'))]"
                                        ],
                                        "commandToExecute": "[concat('bash ', variables('setup_moodleScriptFileName'),' ','gfs',variables('vmName'),'0', ' ',variables('volumeName') )]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat('gfs',variables('vmName'), copyindex(), '/setupGluster')]",
            "apiVersion": "2015-05-01-preview",
            "tags": {
                "displayName": "GfsVmExtension"
            },
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "gfs",
                "count": "[variables('gfsScaleNumber')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/gfs', variables('vmName'), copyindex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [
                        "[variables('customScriptFilePath')]"
                    ],
                    "commandToExecute": "[concat(variables('GlusterSetupCmd'), ' gfs', variables('vmName'), ' ', variables('GfsVmIPPrefix'), ' ', variables('volumeName'), ' ', copyindex(), ' ', variables('GfsScaleNumber'))]"
                }
            }
        },

        {
            "name": "GfsAvSet",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "GfsAvSet"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 3
            }
        },
        {
            "name": "dbAvSet",
            "type": "Microsoft.Compute/availabilitySets",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "dbAvSet"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 3
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2015-04-01",
            "name": "autoscalewad",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Compute/virtualMachineScaleSets/webfarm"
            ],
            "properties": {
                "name": "autoscalewad",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', 'webfarm')]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "2",
                            "maximum": "10",
                            "default": "4"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "\\Processor\\PercentProcessorTime",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/','webfarm')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "\\Processor\\PercentProcessorTime",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', 'webfarm')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 50
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ]
            }
        }
    ]
}